FORMAT: 1A
HOST: http://spordisemu.apiblueprint.org/

# spordisemu

Spordisemu is an Android app for finding people to do sports together.

## Users collection [/users]

### List all users [GET]

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "firstname": "Test",
                "lastname": "Test",
                "gender": 0,
                "email": "test@mail.ee",
                "password": "test"
            },
            {
                "id": 2,
                "firstname": "Kalle", 
                "lastname": "Blomkvist", 
                "gender": 1, 
                "username": "kalle123@mail.ee",
                "password": "vanaema"
            },
            {
                "id": 3,
                "firstname": "Peeter",
                "lastname": "Paan",
                "gender": 1,
                "email": "flamingo_9@mail.ee",
                "password": "linnud"
            },
            {
                "id": 4,
                "firstname": "Bemm",
                "lastname": "Kumm",
                "gender": 0,
                "email": "bemmikummid@mail.ee",
                "password": "mul_on123"
            }
        ]

### Create a new user [POST]

+ Request (application/json)

        {
                "id": 5,
                "firstname": "Uus",
                "lastname": "Uus",
                "gender": 1,
                "e-mail": "uusTuus@tuus.ee",
                "password": "tuttuus"
        }

+ Response 201 (application/json)

    + Headers

            Location: /users/5

    + Body

            {
                "id": 5,
                "name": "Uus Uus"
                "gender": 1
                "e-mail": "uusTuus@tuus.ee"
                "password": "tuttuus"
            }


## One user collection [/users/{email}]

### Show one user [GET]

+ Response 200 (application/json)

        {
            "id": 1,
            "firstname": "Test",
            "lastname": "Test",
            "gender": 0,
            "email": "test@mail.ee",
            "password": "test"
        }

## User profile collection [/profiles/{email}]

### Show user's profile [GET]

+ Parameters
    + email (text) - email of a user
    
+ Response 200 (application/json)

        {
            "id": 1,
            "location": "Narnia",
            "pic": "http://trialx.org/wp-content/uploads/2012/04/animals/Cabbagehead-3.jpg"
        }
        
### Create new profile [POST]

+ Parameters
    + email (text) - email of a user
    
+ Request (application/json)

        {
            "id": 2,
            "location": "Hogwarts",
            "pic": "http://trialx.org/wp-content/uploads/2012/04/animals/Cabbagehead-3.jpg"
        }
        
+ Response 201 (application/json)

    + Headers

            Location: /profiles/1

    + Body

            {
                "id": 2,
                "location": "Hogwarts",
                "pic": "http://trialx.org/wp-content/uploads/2012/04/animals/Cabbagehead-3.jpg"
            }
        
## Ratings collection [/users/{email}/ratings]

### Show all ratings of a user [GET]

+ Parameters
    + email (text) - email of a user
    
+ Response 200 (application/json)

        {
            "rating_id": 1,
            "user_id": 1,
            "commenter_id": 2,
            "rating": 1,
            "comment": "You're not a cabbage"
        }
        
### Create a new rating [POST]

+ Request (application/json)

        {
                "rating_id": 2,
                "user_id": 1,
                "commenter_id": 3,
                "rating": 5,
                "comment": "I like cabbages"
        }

+ Response 201 (application/json)

    + Headers

            Location: /users/{email}/ratings/2

    + Body

            {
                "rating_id": 2,
                "user_id": 1,
                "commenter_id": 3,
                "rating": 5,
                "comment": "I like cabbages"
            }
            
## Practices collection [/practices]

### Show all practices [GET]

+ Response 200 (application/json)

        {
            "practice_id": 1,
            "type": "Quidditch",
            "timestamp": "2016-09-01 14:00:00",
            "location": "Hogwarts",
            "level": "novice",
            "user_id": 1
        }
        
### Create new practice [POST]
  
+ Request (application/json)

        {
            "practice_id": 2,
            "type": "Wizard chess",
            "timestamp": "2016-09-15 15:00:00",
            "location": "Hogwarts",
            "level": "expert",
            "user_id": 1
        }
        
+ Response 201 (application/json)

    + Headers

            Location: /practices/2

    + Body

            {
                "practice_id": 2,
                "type": "Wizard chess",
                "timestamp": "2016-09-15 15:00:00",
                "location": "Hogwarts",
                "level": "expert",
                "user_id": 1
            }
            
## Comments collection [/practices/{practice_id}/comments]

### Show all practices [GET]

+ Parameters
    + practice_id (number) - id of a practice

+ Response 200 (application/json)

        {
            "comment_id": 1,
            "user_id": 2,
            "practice_id": 1,
            "comment": "Quidditch is not a real game"
        }
        
### Create new comment [POST]
  
+ Request (application/json)

        {
            "comment_id": 2,
            "user_id": 1,
            "practice_id": 1,
            "comment": "Yes it is (HP 4 life)"
        }
        
+ Response 201 (application/json)

    + Headers

            Location: /practices/1/comments/2

    + Body

            {
                "comment_id": 2,
                "user_id": 1,
                "practice_id": 1,
                "comment": "Yes it is (HP 4 life)"
            }
           
## Attend collection [/practices/{practice_id}/attend]

### Show all attends [GET]

+ Parameters
    + practice_id (number) - id of a practice

+ Response 200 (application/json)

        {
            "attend_id": 1,
            "user_id": 2,
            "practice_id": 1
        }
        
### Create new attend [POST]
  
+ Request (application/json)

        {
            "attend_id": 2,
            "user_id": 3,
            "practice_id": 1
        }
        
+ Response 201 (application/json)

    + Headers

            Location: /practices/1/attend/2

    + Body

            {
                "attend_id": 2,
                "user_id": 3,
                "practice_id": 1
            }

        